const helpCommand= "pFacesCli help";
var helpProperties = {
  name: helpCommand,
  description: "Shows all arguments",
  returnType: "string"
};

var helpImpl = {
  callback: function(args, context) {
      var message="\
pFacesCli is a Eclipse-Orion plugin that allows communication with hardware configurations (HWCs) \
powered by pFaces. To use this plugin, you need to run any of the following commands in the \
terminal window.\n\
\n\
Commands:\n\
-----------------------------\n\
     pFacesCli help\n\
     pFacesCli login\n\
     pFacesCli list-hwcs\n\
     pFacesCli list-devices <HWC_codename>\n\
     pFacesCli upload <project> <HWC_codename>\n\
     pFacesCli compile <project> <HWC_codename>\n\
     pFacesCli run <project> <HWC_codename> <device_id> <kernel_name> [<config_file>]\n\
     pFacesCli list-Jobs <HWC_codename>\n\
     pFacesCli Job-details <HWC_codename> <job_id>\n\
     pFacesCli kill <HWC_codename> <job_id>\n\
     \n\
Commands' descriptions:\n\
-----------------------------\n\
     help: shows this help menu.\n\
     login: attemps login to all HWCs entered in the settings.\n\
     list-hwcs: lists all available HWCs, their codenames, and login status.\n\
     list-devices: lists available devices in a targeted HWC.\n\
     upload: uploads a project to a targted HWC.\n\
     compile: compiles a project already uploaded to a HWC. This commands creats a job in the HWC lobs list. Recalling the details of this job gives the compilation report.\n\
     run: runs project with pFaces. This commands creats a job in the HWC lobs list. Recalling the details of this job gives the output of pFaces.\n\
     list-jobs: list all jobs assigned to a HWC.\n\
     Job-details: shows the status and output of a job in an HWC.\n\
     kill: terminates a job in an HWC.\n\
     \n\
     <HWC_codename>: the code name of an HWC. Usuall, this will be: hwc1, hwc2 ... etc.\n\
     <project>: a project (root folder name) in projects list in the editor. If you are inside the project when using the terminal, this shoud be set to '.'.\n\
     <device_id>: theid of the device from the list of devices generated by the command list-devices.\n\
     <kernel_name>: the name of the kernel in the project.\n\
     <config_file>: the path (relative to root folder in the project) to a config file to be passed to the kernel.\n";
    
     return message;

  }
};
